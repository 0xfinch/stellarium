В этом файле содержится информация о возможности свободных полетов камеры в Stellarium.

Как известно, камера в Stellarium может находится только на какой-нибудь планете. Естественно, 
реализовать сложные и красивые движения, при таком подходе, используя только тела солнечной
системы, затруднительно. С другой стороны, в корне менять уже написанный код - было бы занятием
бессмысленным. Поэтому было принято решение внедрить в солнечную систему искусственный объект, 
который осуществляет движение по задаваемой пользователем траектории.

Итак, для того, чтобы свободно летать по солнечной системе нужно сделать 2 вещи.

1) Добавить объект Shuttle в ssystem.ini
В самый конец файла (важно, что в конец, так как в момент его создания все остальные объекты уже
должны быть созданы, чтобы шатл знал о них) нужно добавить секцию, описывающую параметры шатла.

Пример минимального содержимого секции:
[shuttle]
name = Shuttle
parent = Sun
radius = 100.
halo = true
lighting = true
color = 1.,1.,1.
trajectory_file = trajectory.ini
albedo = 0.35
tex_map = textures\spaceshiptexture.bmp
coord_func = sun_special
tex_halo = star16x16.png

Большинство указанных параметров в действительности не используются, но без них объект солнечной
системы просто не может быть создан. 
Пример написан в предположении, что внешний вид шатла нас не интересует. Он нужен нам лишь как
"подставка" для камеры. Но в принципе на него можно и наклеить красивую текстуру, и заставить его 
вращаться, вообщем сделать все то, что можно сделать с обычной планетой. Этим мы заниматься не будем 
(во всяком случае, пока).
Два самых важных параметра - name и trajectory_file. Имя шатла обязательно должно быть "Shuttle".
Значение параметра trajectory_file - это имя файла, в котором будет задаваться траектория полета
шатла (далее - фалй траектории). Файл траектории должен находиться в папке data (той же папке, что и
ssystem.ini).

Подводя черту, чтобы добавить шатл в солнечную систему, нужно просто скопировать содержимое примера 
и вставить его в конец файла ssystem.ini

2) Написать файл траектории.
Имя файла траектории должно быть указано в поле trajectory_file объекта Shuttle (см. предыдущий пункт).

Формат файла траектории:
a) если необходимо, то можно указать шатлу время, в которое он должен начать свое движение. 
Для этого в начале файла траектории следует написать команду
date 2007-06-01T12:00:00
Интуитивно понятно, что здесь к чему (кстати, формат времени такой же, как в скриптах Stellarium).
Если не написана команда date, то шатл начнет движение в момент времени, задаваемый Юлианским днем
2451514.250011573
Некоторые пояснения. В stellarium стартовое время можно задавать двумя способами - установить его 
равным текущему времени (из системных часов) или сделать, чтобы это время при каждом запуске 
было всегда одинаковым. Для управления этим, в файле config.ini в секции navigation есть параметр 
startup_time_mode. Первому способу соответсвует его значение Actual, второму - Preset. Если установлено
значение Preset, то стартовое время указывается в еще одном параметре секции navigation - preset_sky_time.
По умолчанию, значение этого параметра 2451514.250011573. Т.е. если для вас не имеет значения какое 
будет внутреннее время в Stellarium и вы хотите, чтобы шатл начал движение в момент запуска Stellarium,
тогда нужно установить значение параметра startup_time_mode равным Preset и не писать команду date в файле
траектории. 

b) строчка, в начале которой стоит # игнорируется (комментарий)

В этом файле содержится информация о возможности свободных полетов камеры в Stellarium.

Как известно, камера в Stellarium может находится только на какой-нибудь планете. Естественно, 
реализовать сложные и красивые движения, при таком подходе, используя только тела солнечной
системы, затруднительно. С другой стороны, в корне менять уже написанный код - было бы занятием
бессмысленным. Поэтому было принято решение внедрить в солнечную систему искусственный объект, 
который осуществляет движение по задаваемой пользователем траектории.

Итак, для того, чтобы свободно летать по солнечной системе нужно сделать 2 вещи.

1) Добавить объект Shuttle в ssystem.ini
В самый конец файла (важно, что в конец, так как в момент его создания все остальные объекты уже
должны быть созданы, чтобы шатл знал о них) нужно добавить секцию, описывающую параметры шатла.

Пример минимального содержимого секции:
[shuttle]
name = Shuttle
parent = Sun
radius = 100.
halo = true
lighting = true
color = 1.,1.,1.
trajectory_file = trajectory.ini
albedo = 0.35
tex_map = textures\spaceshiptexture.bmp
coord_func = sun_special
tex_halo = star16x16.png

Большинство указанных параметров в действительности не используются, но без них объект солнечной
системы просто не может быть создан. 
Пример написан в предположении, что внешний вид шатла нас не интересует. Он нужен нам лишь как
"подставка" для камеры. Но в принципе на него можно и наклеить красивую текстуру, и заставить его 
вращаться, вообщем сделать все то, что можно сделать с обычной планетой. Этим мы заниматься не будем 
(во всяком случае, пока).
Два самых важных параметра - name и trajectory_file. Имя шатла обязательно должно быть "Shuttle".
Значение параметра trajectory_file - это имя файла, в котором будет задаваться траектория полета
шатла (далее - фалй траектории). Файл траектории должен находиться в папке data (той же папке, что и
ssystem.ini).

Подводя черту, чтобы добавить шатл в солнечную систему, нужно просто скопировать содержимое примера 
и вставить его в конец файла ssystem.ini

2) Написать файл траектории.
Имя файла траектории должно быть указано в поле trajectory_file объекта Shuttle (см. предыдущий пункт).

Формат файла траектории:
- если необходимо, то можно указать шатлу время, в которое он должен начать свое движение. 
Для этого в начале файла траектории следует написать команду
date 2007-06-01T12:00:00
Интуитивно понятно, что здесь к чему (кстати, формат времени такой же, как в скриптах Stellarium).
Если не написана команда date, то шатл начнет движение в момент времени, задаваемый Юлианским днем
2451514.250011573
Некоторые пояснения. В stellarium стартовое время можно задавать двумя способами - установить его 
равным текущему времени (из системных часов) или сделать, чтобы это время при каждом запуске 
было всегда одинаковым. Для управления этим, в файле config.ini в секции navigation есть параметр 
startup_time_mode. Первому способу соответсвует его значение Actual, второму - Preset. Если установлено
значение Preset, то стартовое время указывается в еще одном параметре секции navigation - preset_sky_time.
По умолчанию, значение этого параметра 2451514.250011573. Т.е. если для вас не имеет значения какое 
будет внутреннее время в Stellarium и вы хотите, чтобы шатл начал движение в момент запуска Stellarium,
тогда нужно установить значение параметра startup_time_mode равным Preset и не писать команду date в файле
траектории. 

- строчка, в начале которой стоит # игнорируется (комментарий)

- строчка, начинающаяся со слова ellipse, считается описанием некоторой элиптической орбиты. 
Параметры этой орбиты, в порядке указания - имя орбиты, имя "родной" планеты, два радиуса, период, три угла 
и начальное смещение.

- строчка, начинающаяся со слова fly, считается указанием шатлу совершить полет по указанной орбите. 
Параметры, в порядке указания - имя орбиты, длительность.

- строчка, начинающаяся со слова pass, считается указанием шатлу совершить полет по прямой к планете, с 
заходом на указанную эллиптическую орбиту.
Параметры, в порядке указания - имя эллиптической орбиты, длительность и параметр, характеризующий 
крутизну захода на эллиптическую орбиту

- строчка, начинающаяся со слова wait, считается указанием шатлу остановиться на указанное время.
Единственный параметр - длительность остановки.

- строчка, начинающаяся со слова flyto, считается указанием шатлу совершить полет по прямой из текущего 
положения, к указанной планете, за указанное время.
Параметры, в порядке указания - имя планеты, длительность, параметр, характеризующий близость подлета.
 
- строчка, начинающаяся со слова flyfrom, считается указанием шатлу совершить полет по прямой из текущего 
положения, от указанной планеты, за указанное время.
Параметры, в порядке указания - имя планеты, длительность.

Пример файла траектории:
#date 2007-06-01T12:00:00

ellipse E1 Sun   0.05   0.09   10.0  14.0  12.0   43.0  30.0
ellipse E2 Earth 0.0003 0.0002 10.0  14.0  12.0   43.0  30.0
ellipse E3 Moon  0.0005 0.0008 10.0  14.0  12.0   43.0  30.0

wait 5.0

flyto Sun 10.0 0.001

wait 5.0

flyfrom Sun 10

pass E2 10.0 0.02
fly E2 10.0

wait 3.0

pass E3 10.0 0.01
fly E3 10.0


flyto Earth 10.0 0.0001

wait 5.0

flyto Moon 10.0 0.001

wait 5.0

pass E1 10.0 0.02
fly E1 10.0 

wait 3.0









